#!/usr/bin/env groovy
// the "!#/usr/bin... is just to to help IDEs, GitHub diffs, etc properly detect the language and do syntax highlighting for you.
// thx to https://github.com/jenkinsci/pipeline-examples/blob/master/docs/BEST_PRACTICES.md

def updateReleaseBranch(final String repoName)
{
		echo "BEGIN updateReleaseBranch with repoName=${repoName}";

		//final repoURL = "https://github.com/metasfresh/${repoName}.git";
		final repoURL = "git@github.com:metasfresh/${repoName}.git";
		echo "repoURL=${repoURL}";

		// use the git pipeline step because it can take advantage of the jenkins infrastructure and might be more efficient than just cloning each time
		sh "git clone ${repoURL}";

		dir(repoName)
		{
			sh "git config user.email \"dev@metasfresh.com\"";
			sh "git config user.name \"metas.dev\"";

			sh "git config push.default matching"

				// we only need this tag for a limited time, so create a "lightweight" tag, see https://git-scm.com/docs/git-tag for details
				final String tagName="${env.BUILD_TAG}"
				sh "git tag ${tagName}";

				sh 'git checkout -B release'; // -B: create or reset
				sh "git pull ${repoURL} release" // just to be sure that we really have the latest master..not sure if this is neccesary

				sh 'git merge origin/master';

				sh "git remote set-url origin ${repoURL}";
				sh 'git push';

				// also push the tag we created
				sh 'git push --tags';

				// append tag info to the build description
				currentBuild.description="""${currentBuild.description}
				<br/>tagged ${repoURL} with tag ${tagName}."""
		}
		echo "END updateReleaseBranch with repoName=${repoName}";
}

currentBuild.description="";

timestamps
{
stage("Checkout repos")
{
    node('linux')
    {
		deleteDir(); // clear or workspace
		sshagent(['metas-dev-ssh-key'])
		{
				updateReleaseBranch 'metasfresh-parent';
				updateReleaseBranch 'metasfresh-admin';
				updateReleaseBranch 'metasfresh';
				updateReleaseBranch 'metasfresh-webui-api';
				updateReleaseBranch 'metasfresh-webui-frontend';
				updateReleaseBranch 'metasfresh-procurement-webui';
				updateReleaseBranch 'metasfresh-dist';
				updateReleaseBranch 'metasfresh-dist-orgs';
		}
	}
}
} // timestamps
